/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// DEFAULT
// ┌───┬───┬───┬───┬───┬───┐┌───┬───┬───┬───┬───┬───┐
// │TAB│ Q │ W │ E │ R │ T ││ Y │ U │ I │ O │ P │ Å │
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │SHF│ A │ S │ D │ F │ G ││ H │ J │ K │ L │ Ö │ Ä │
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │CTR│ Z │ X │ C │ V │ B ││ N │ M │ , │ . │ - │ s │
// └───┴───┴───┼───┼───┼───┤├───┼───┼───┼───┴───┴───┘
//             │LAL│ 1 │SPC││RET│ 2 │RAL│
//             └───┴───┴───┘└───┴───┴───┘

// DEFAULT SHIFTED
// ┌───┬───┬───┬───┬───┬───┐┌───┬───┬───┬───┬───┬───┐
// │TAB│   │   │   │   │   ││   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │SHF│   │   │   │   │   ││   │   │   │   │   │   │
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │CTR│   │   │   │   │   ││   │   │ ; │ : │ _ │   │
// └───┴───┴───┼───┼───┼───┤├───┼───┼───┼───┴───┴───┘
//             │LAL│ 1 │SPC││RET│ 2 │RAL│
//             └───┴───┴───┘└───┴───┴───┘

// LOWER 1
// ┌───┬───┬───┬───┬───┬───┐┌───┬───┬───┬───┬───┬───┐
// │TAB│ 1 │ 2 │ 3 │ 4 │ 5 ││ 6 │ 7 │ 8 │ 9 │ 0 │BSP│
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │SHF│   │ + │ - │ * │ / ││LEF│DOW│UP.│RIG│   │DEL│
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │CTR│   │   │   │   │   ││   │   │ , │ . │   │INS│
// └───┴───┴───┼───┼───┼───┤├───┼───┼───┼───┴───┴───┘
//             │LAL│ 1 │SPC││RET│ 2 │RAL│
//             └───┴───┴───┘└───┴───┴───┘

// RAISED 2
// ┌───┬───┬───┬───┬───┬───┐┌───┬───┬───┬───┬───┬───┐
// │TAB│ ! │ " │ # │ ¤ │ % ││ & │ / │ ( │ ) │ = │ ? │
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │SHF│   │ @ │   │ $ │   ││   │ { │ [ │ ] │ } │ \ │
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │CTR│ < │ > │ | │ V │   ││   │ * │ ' │ ´ │ ` │ ~ │
// └───┴───┴───┼───┼───┼───┤├───┼───┼───┼───┴───┴───┘
//             │WIN│ 1 │SPC││RET│ 2 │RAL│
//             └───┴───┴───┘└───┴───┴───┘

// FN 3
// ┌───┬───┬───┬───┬───┬───┐┌───┬───┬───┬───┬───┬───┐
// │TAB│F 1│F 2│F 3│F 4│F 5││F 6│F 7│F 8│F 9│F10│INS│
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │SHF│BT1│BT2│   │   │BTC││F11│F12│   │   │HOM│PGU│
// ├───┼───┼───┼───┼───┼───┤├───┼───┼───┼───┼───┼───┤
// │CTR│   │   │   │   │   ││   │   │   │   │END│PGD│
// └───┴───┴───┼───┼───┼───┤├───┼───┼───┼───┴───┴───┘
//             │LAL│ 1 │SPC││RET│ 2 │RAL│
//             └───┴───┴───┘└───┴───┴───┘

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_sv.h"
/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";
        DEFAULT {
            bindings = <
    &kp TAB    &kp SE_Q  &kp SE_W  &kp SE_E      &kp SE_R   &kp SE_T   &kp SE_Y  &kp SE_U  &kp SE_I     &kp SE_O     &kp SE_P     &kp SE_ARNG
    &kp LSHFT  &kp SE_A  &kp SE_S  &kp SE_D      &kp SE_F   &kp SE_G   &kp SE_H  &kp SE_J  &kp SE_K     &kp SE_L     &kp SE_ODIA  &kp SE_ADIA
    &kp LCTRL  &kp SE_Z  &kp SE_X  &kp SE_C      &kp SE_V   &kp SE_B   &kp SE_N  &kp SE_M  &kp SE_COMM  &kp SE_DOT   &kp SE_MINS  &kp RSHFT
                                   &kp LEFT_ALT  &mo 1      &kp SPACE  &kp RET   &mo 2     &kp RALT
            >;
        };

        LOWER {
            bindings = <
    &kp TAB    &kp SE_1     &kp SE_2     &kp SE_3     &kp SE_4     &kp SE_5     &kp SE_6    &kp SE_7    &kp SE_8     &kp SE_9     &kp SE_0  &kp BSPC
    &kp LSHFT  &none        &kp SE_PLUS  &kp SE_MINS  &kp SE_ASTR  &kp SE_SLSH  &kp LEFT    &kp DOWN    &kp UP       &kp RIGHT    &none     &kp DEL
    &kp LCTRL  &kp SE_LABK  &none        &none        &none        &none        &none       &none       &kp SE_COMM  &kp SE_DOT   &none     &kp INS
                                         &trans       &trans       &trans       &trans      &trans      &trans
            >;
        };

        RAISED {
            bindings = <
    &kp TAB    &kp SE_EXLM  &kp SE_DQUO  &kp SE_HASH   &kp SE_CURR  &kp SE_PERC  &kp SE_AMPR  &kp SE_SLSH  &kp SE_LPRN  &kp SE_RPRN  &kp SE_EQL   &kp SE_QUES
    &kp LSHFT  &none        &kp SE_AT    &none         &kp SE_DLR   &none        &none        &kp SE_LCBR  &kp SE_LBRC  &kp SE_RBRC  &kp SE_RCBR  &kp SE_BSLS
    &kp LCTRL  &kp SE_LABK  &kp SE_RABK  &kp SE_PIPE   &kp SE_V     &none        &none        &kp SE_ASTR  &kp SE_QUOT  &kp SE_ACUT  &kp SE_GRV   &kp SE_TILD
                                         &kp LEFT_GUI  &trans       &trans       &trans       &trans       &trans
            >;
        };

        FUSE_C {
            bindings = <
    &kp TAB    &kp F1        &kp F2        &kp F3  &kp F4  &kp F5      &kp F6   &kp F7   &kp F8  &kp F9  &kp F10   &kp INS
    &kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1  &none   &none   &bt BT_CLR  &kp F11  &kp F12  &none   &none   &kp HOME  &kp PG_UP
    &kp LCTRL  &none         &none         &none   &none   &none       &none    &none    &none   &none   &kp END   &kp PG_DN
                                           &trans  &trans  &trans      &trans   &trans   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        FN_LAYER_CND {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
